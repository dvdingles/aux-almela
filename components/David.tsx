/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    ['TQ_ARD-geom']: THREE.Mesh
    ['TQ_ARD-geom_1']: THREE.Mesh
    ['TQ_ARD-geom_2']: THREE.Mesh
  }
  materials: {
    TQ_ARD_front: THREE.MeshStandardMaterial
    TQ_ARD_back: THREE.MeshStandardMaterial
    TQ_ARD_edge: THREE.MeshStandardMaterial
  }
}

export function David(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/5D_ALMELA_WEB.gltf') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh castShadow receiveShadow geometry={nodes['TQ_ARD-geom'].geometry} material={materials.TQ_ARD_front} />
      <mesh castShadow receiveShadow geometry={nodes['TQ_ARD-geom_1'].geometry} material={materials.TQ_ARD_back} />
      <mesh castShadow receiveShadow geometry={nodes['TQ_ARD-geom_2'].geometry} material={materials.TQ_ARD_edge} />
    </group>
  )
}

useGLTF.preload('/5D_ALMELA_WEB.gltf')
